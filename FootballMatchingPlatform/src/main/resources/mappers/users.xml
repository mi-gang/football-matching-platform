<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.kosta.project.repository.UserMapper">

	<!-- 회원 정지 여부 확인(매칭 신청 할 때) -->
	<select id="selectUserStatus" resultType="java.lang.String" parameterType="java.lang.String">
		SELECT user_status as userStatus FROM users WHERE user_id = #{userId}
	</select>
	
	<!-- 팀원 정지 여부 확인(팀 매칭 신청 할 때), 빠른 매칭 결제 할 때 -->
	<select id="selectSuspendedTime" resultType="java.lang.String" parameterType="java.lang.String">
		SELECT suspended_time as suspendedTime FROM users
		WHERE user_id = #{userId}
	</select>

    <!-- 시큐리티용 로그인 -->
    <select id="findByUserId" parameterType="java.lang.String" resultType="com.kosta.project.dto.UserDTO">
        SELECT user_id, password
        FROM users
        WHERE user_id = #{userId}
    </select>

    <!-- 유저 로그인 -->
    <select id="selectUserLogin" parameterType="java.lang.String" resultType="com.kosta.project.dto.UserDTO">
        SELECT user_id as userId, password, address, user_tier as userTier, user_status
        FROM users
        WHERE (suspended_time IS NULL OR NOW() - suspended_time >= 0)
          AND user_id = #{userId}
          AND user_status = 'U'
    </select>


  
	<!-- 유저 구글 로그인 -->
  <select id="selectUserSnsLogin" parameterType="java.lang.String" resultType="com.kosta.project.dto.UserDTO">
    SELECT
      user_id as userId,
      address,
      user_tier as userTier,
      user_status
    FROM users
    WHERE
      user_id = #{userId}
      AND password = #{password}
  </select>


	<!-- 유저 마지막 로그인 날짜 업데이트 -->
  <update id="setUserLastLoginDateByUserId" parameterType="java.lang.String">
    UPDATE users
    SET last_login_date = NOW()
    WHERE user_id = #{userId}
  </update>


	<!-- 아이디 중복 체크용 유저 아이디 불러오기 -->
  <select id="selectUserIdByUserId" parameterType="java.lang.String" resultType="java.lang.String">
    SELECT
      user_id as userId
    FROM users
    WHERE user_id = #{userId}
  </select>
	
	
	<!-- 닉네임 중복 체크용 닉네임 불러오기 -->
  <select id="selectUserNicknameByNickname" parameterType="java.lang.String" resultType="java.lang.Integer">
      SELECT count(nickname)
      FROM users
      WHERE nickname = #{nickname}
  </select>	
	  
	  
	  
	<!-- 이메일 중복 체크용 이메일 불러오기 -->	  
  <select id="selectEmailByEmail" resultType="java.lang.String" parameterType="java.lang.String">
    SELECT email
    FROM users
    WHERE email = #{email}
  </select>


	<!-- 회원가입하기 -->
  <insert id="insertUserJoin" parameterType="com.kosta.project.dto.UserDTO">
    INSERT INTO users(user_id, password, nickname, NAME, birthday, gender, phone_number, email,
        address, game_count, win_count, user_rank, last_login_date, join_date, user_score, report_count,
        suspended_time, user_status, user_tier)
    VALUES (#{userId}, #{password}, #{nickname}, #{name}, #{birthday}, #{gender}, #{phoneNumber}, #{email},
        #{address},  0, 0, 0, null, NOW(), 100, 0, NULL, "U", "D")
  </insert>


	<!-- 이름, 이메일 일치하는 아이디 불러오기 -->
  <select id="selectIdByNameAndEmail" resultType="java.lang.String" parameterType="java.lang.String">
    SELECT user_id as userId
    FROM users
    WHERE NAME = #{name}
    AND email = #{email}
  </select>


	<!-- 아이디, 이메일 일치하는 비밀번호 불러오기 -->
  <select id="selectPasswordByUserIdAndEmail" resultType="java.lang.String" parameterType="java.lang.String">
    SELECT password
    FROM users
    WHERE user_id = #{userId}
    AND email = #{email}
  </select>


	<!-- 비밀번호 업데이트하기 -->
  <update id="updatePasswordByUserId" parameterType="java.lang.String"> 
    UPDATE users
    SET PASSWORD = #{pw}
    WHERE user_id = #{userId}
  </update>

	<!-- 비밀번호 확인하기 -->
	<select id="selectMyPw" parameterType="java.lang.String">
	Select password
	From users
	WHERE user_id = #{userId}
	</select>
	
  <!-- 개인순위 top1 불러오기 -->
  <select id="selectTopOneUser" resultType="com.kosta.project.dto.UserDTO">
    SELECT users.user_rank as userRank, users.user_tier as userTier, users.nickname, users.user_score as userScore, 
    CASE WHEN teams.team_name IS NULL THEN '' ELSE teams.team_name END AS teamName
    FROM users
	 LEFT JOIN team_members
	 ON team_members.user_id = users.user_id
	 LEFT JOIN teams
	 ON teams.team_seq = team_members.team_seq
	 WHERE 1 = users.user_rank;
  </select>
  
  <!-- 개인순위 top2 불러오기 -->
  <select id="selectTopTwoUser" resultType="com.kosta.project.dto.UserDTO">
    SELECT user_rank as userRank, nickname, user_score as userScore
    FROM users WHERE 2 = user_rank
  </select>
 
  <!-- 개인순위 top3 불러오기 -->
  <select id="selectTopThreeUser" resultType="com.kosta.project.dto.UserDTO">
    SELECT user_rank as userRank, nickname, user_score as userScore
    FROM users WHERE 3 = user_rank
  </select>
      
  
  
  
	
	
	<!-- 개인순위 top100명 불러오기 -->
  <select id="selectTopHundredUsersList" resultType="com.kosta.project.dto.UserDTO">
    SELECT users.user_rank as userRank, users.user_tier as userTier, users.nickname, users.user_score as userScore, 
    CASE WHEN teams.team_name IS NULL THEN '' ELSE teams.team_name END AS teamName
    FROM users
	 LEFT JOIN team_members
	 ON team_members.user_id = users.user_id
	 LEFT JOIN teams
	 ON teams.team_seq = team_members.team_seq
	 WHERE 100 >= users.user_rank
    AND users.user_rank > 1
    order by users.user_rank
    LIMIT 99;
  </select>


	<!-- 내 정보 수정하기 -->
  <update id="updateMyInfoByUserId" parameterType="com.kosta.project.dto.UserDTO">
    UPDATE users
    SET
      NAME = #{name},
      nickname = #{nickname},
      email = #{email},
      phone_number = #{phoneNumber}
    WHERE user_id = #{userId};
  </update>



	<!-- 회원 상태 수정하기(회원 탈퇴) -->
  <update id="updateUserStatusByUserId" parameterType="com.kosta.project.dto.UserDTO">
    UPDATE users
    SET
      user_status = 'D'
    WHERE user_id = #{userId};
  </update>	
	
	
	<!-- 내 정보 불러오기 -->
  <select id="selectMyInfoByUserId" parameterType="java.lang.String" resultType="com.kosta.project.dto.UserDTO">
    select NAME, user_id as userId, nickname, birthday, gender, email, phone_number as phoneNumber
	FROM users
	WHERE user_id = #{userId};
  </select>	
	
	
	<!-- 내 등급 불러오기 -->
  <select id="selectMyTierAndScoreByUserId" parameterType="java.lang.String" resultType="com.kosta.project.dto.UserDTO">	
	SELECT user_tier, user_score, user_rank, percentile
	FROM users
	WHERE user_id = #{userId}
  </select>	
  
  
  	<!-- 내 전적 불러오기 -->
  <select id="selectMyMatchedInfoByUserId" parameterType="java.lang.String" resultType="com.kosta.project.dto.UserDTO">	
	SELECT game_count as gameCount, win_count as winCount, 100 * (win_count / game_count) AS winRate
	FROM users
	WHERE user_id = #{userId};
  </select>	
	
	
	
  	<!-- 내 이메일, 닉네임 불러오기 -->
  <select id="selectNicknameAndEmailByUserIdForMyPage" parameterType="java.lang.String" resultType="com.kosta.project.dto.UserDTO">	
	SELECT nickname, email
	FROM users
	WHERE user_id = #{userId};
  </select>	
  
  
</mapper>