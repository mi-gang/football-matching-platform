<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.kosta.project.repository.MatchingMapper">
	<!-- 모든 매칭 목록 조회(날짜,시간) -->
	<select id="selectMatchingsListAll" resultType="com.kosta.project.dto.MatchingsDTO" parameterType="com.kosta.project.dto.MatchingConditionDTO">
		SELECT matching_seq as matchingSeq, matching_date as matchingDate, 
		matching_time as matchingTime, field_address as fieldAddress, 
		field_address_detail as fieldAddressDetail, field_name as fieldName, m.field_seq
		FROM matchings m, fields f
		WHERE m.field_seq = f.field_seq
		AND matching_date = #{matchingDate}
		AND matching_time = #{matchingTime}
	</select>
	<!-- 매칭 중인 목록 조회(매칭중 and 이미 신청한 목록 제외) -->
	<select id="selectMatchingsList" resultType="com.kosta.project.dto.MatchingsDTO" parameterType="com.kosta.project.dto.MatchingConditionDTO">
		SELECT DISTINCT m.matching_seq as matchingSeq, matching_date as matchingDate, 
		matching_time as matchingTime, field_address as fieldAddress, 
		field_address_detail as fieldAddressDetail, field_name as fieldName, m.field_seq
		FROM matchings m, fields f, matching_add_lists mal, matching_adds ma
		WHERE m.field_seq = f.field_seq
		AND ma.matching_add_seq = mal.matching_add_seq
		AND mal.matching_seq = m.matching_seq
		AND matching_date = #{matchingDate}
		AND matching_time = #{matchingTime}
		AND matching_status = "매칭중"
		AND m.matching_seq NOT IN (
		SELECT m.matching_seq 
		FROM matchings m, matching_adds ma, matching_add_lists mal
		WHERE (ma.user_id = #{userId} OR ma.team_seq = #{teamSeq})
		AND ma.matching_add_seq = mal.matching_add_seq
		AND mal.matching_seq = m.matching_seq);
	</select>
	
	<!-- 매칭 중인 목록 지역별 조회 -->
	<select id="selectMatchingsListByRegion" resultType="com.kosta.project.dto.MatchingsDTO" parameterType="com.kosta.project.dto.MatchingConditionDTO">
		SELECT matching_seq as matchingSeq, matching_date as matchingDate, 
		matching_time as matchingTime, field_address as fieldAddress, 
		field_address_detail as fieldAddressDetail, field_name as fieldName, m.field_seq
		FROM matchings m, fields f
		WHERE m.field_seq = f.field_seq
		AND matching_date = #{matchingDate}
		AND matching_time = #{matchingTime}
		AND field_address REGEXP #{fieldAddress}; 
	</select>
	
	<!-- 매칭 등록 -->
	<insert id="insertMatchings" parameterType="com.kosta.project.dto.addMatchingsDTO">
		INSERT INTO matchings(matching_date, matching_time, fast_add_status, matching_status, matching_tier,
		a_score, b_score, field_seq)
		VALUES (#{matchingDate}, #{matchingTime}, 0, "매칭중", NULL, NULL, NULL, #{fieldSeq});
	</insert>
	
	<!-- 가장 최근 등록된 매칭 시퀀스 가져오기 -->
	<select id="selectMaxMatchingSeq" resultType="Integer">
		SELECT MAX(matching_seq) FROM matchings
	</select>
	
	<!-- 매칭 신청 정보 등록(개인) -->
	<insert id="insertMatchingAdds" parameterType="java.lang.String">
		INSERT INTO matching_adds(matching_add_date, user_id, team_seq)
		VALUES(NOW(), #{userId}, NULL);
	</insert>
	
	<!-- 매칭 신청 정보 등록(팀) -->
	<insert id="insertMatchingAddsByTeam" parameterType="Integer">
		INSERT INTO matching_adds(matching_add_date, user_id, team_seq)
		VALUES(NOW(), NULL, #{teamSeq});
	</insert>
	
	<!-- 매칭 신청 정보 시퀀스 가져오기(개인) -->
	<select id="selectMatchingAddSeq" resultType="java.lang.Integer" parameterType="String">
		SELECT max(matching_add_seq) FROM matching_adds WHERE user_id = #{userId};
	</select>
	
	<!-- 매칭 신청 정보 시퀀스 가져오기(팀) -->
	<select id="selectMatchingAddSeqByTeam" resultType="java.lang.Integer" parameterType="Integer">
		SELECT max(matching_add_seq) FROM matching_adds WHERE team_seq = #{teamSeq};
	</select>
	
	<!-- 신청 할 매칭 상태 조회 -->
	<select id="selectMatchingStatus" resultType="java.lang.String" parameterType="java.lang.Integer">
		SELECT matching_status as matchingStatus FROM matchings
		WHERE matching_seq = #{matchingSeq};
	</select>
	
	<!-- 매칭 신청 등록(개인) -->
	<select id="insertMatchingAddLists" parameterType="com.kosta.project.dto.MatchingAddListsDTO">
		INSERT INTO matching_add_lists(matching_seq, matching_success_status, cancel_status, pay_status,
		review_status, team_status, team, player_number, review_score, matching_add_seq)
		VALUES (#{matchingSeq}, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, NULL, 0, #{matchingAddSeq});
	</select>
	
	<!-- 매칭 신청 등록(팀) -->
	<select id="insertMatchingAddListsByTeam" parameterType="com.kosta.project.dto.MatchingAddListsDTO">
		INSERT INTO matching_add_lists(matching_seq, matching_success_status, cancel_status, pay_status,
		review_status, team_status, team, player_number, review_score, matching_add_seq)
		VALUES (#{matchingSeq}, FALSE, FALSE, FALSE, FALSE, TRUE, #{team}, NULL, NULL, #{matchingAddSeq});
	</select>
	
	<!-- 등록한 매칭에 대한 인원수 확인 -->
	<select id="selectMatchingMemberCount" resultType="java.lang.Integer" parameterType="com.kosta.project.dto.MatchingCountDTO">
		SELECT COUNT(matching_add_list_seq)
		FROM matching_add_lists ml, matching_adds ma, users u
		WHERE ml.matching_add_seq = ma.matching_add_seq
		AND ma.user_id = u.user_id
		AND matching_seq = #{matchingSeq} AND cancel_status = FALSE
		AND user_tier = #{userTier};
	</select>
	
	<!-- 등록한 매칭에 대한 인원 확인(팀신청) -->
	<select id="selectMatchingMemberCountByTeam" resultType="java.lang.Integer" parameterType="com.kosta.project.dto.MatchingCountDTO">
		SELECT COUNT(matching_add_list_seq) 
		FROM matching_add_lists ml, matching_adds ma, teams t
		WHERE ml.matching_add_seq = ma.matching_add_seq
		AND ma.team_seq = t.team_seq
		AND matching_seq = #{matchingSeq}
		AND team_status = 1 AND cancel_status = FALSE
		AND team_tier = #{teamTier};
	</select>
	
	<!-- 매칭 성공 시 매칭 상태 매칭중 -> 매칭성공으로 변경 and 매칭 티어 설정 -->
	<update id="updateMatchings">
		UPDATE matchings SET matching_status = '매칭성공', matching_tier = #{tier}
		WHERE matching_seq = #{matchingSeq};
	</update>
	
	<!-- 매칭 성공 시 신청 인원 매칭 성공 상태 FALSE -> TRUE로 변경(개인)-->
	<update id="updateMatchingAddLists" parameterType="com.kosta.project.dto.MatchingCountDTO">
		UPDATE matching_add_lists ml
		INNER JOIN matching_adds ma
		ON ml.matching_add_seq = ma.matching_add_seq
		INNER JOIN users u
		ON u.user_id = ma.user_id
		SET matching_success_status = TRUE
		WHERE matching_seq = #{matchingSeq}
		AND u.user_tier = #{userTier};
	</update>
	
	<!-- 매칭 성공 시 신청 인원 매칭 성공 상태 FALSE -> TRUE로 변경(팀)-->
	<update id="updateMatchingAddListsOfTeam" parameterType="com.kosta.project.dto.MatchingCountDTO">
		UPDATE matching_add_lists ml
		INNER JOIN matching_adds ma
		ON ml.matching_add_seq = ma.matching_add_seq
		INNER JOIN teams t
		ON t.team_seq = ma.team_seq
		SET matching_success_status = TRUE
		WHERE matching_seq = #{matchingSeq}
		AND t.team_tier = #{teamTier};
	</update>
	
	<!-- 매칭 성공 시 팀과 등번호 배정 -->
	<!-- 해당 매칭에 신청한 리스트 가져오기(개인) -->
	<select id="selectMatchingMember" resultType="Integer" parameterType="com.kosta.project.dto.MatchingCountDTO">
		SELECT matching_add_list_seq
		FROM matching_add_lists ml, matching_adds ma, users u
		WHERE ml.matching_add_seq = ma.matching_add_seq
		AND ma.user_id = u.user_id
		AND matching_seq = #{matchingSeq}
		AND cancel_status = FALSE
		AND user_tier = #{userTier};
	</select>
	
	<!-- 팀 배정 A -->
	<update id="updateTeamToA" parameterType="Integer">
		UPDATE matching_add_lists SET team = "A" WHERE matching_add_list_seq = #{matchingAddListSeq};
	</update>
	
	<!-- 팀 배정 B -->
	<update id="updateTeamToB" parameterType="Integer">
		UPDATE matching_add_lists SET team = "B" WHERE matching_add_list_seq = #{matchingAddListSeq};
	</update>
	
	<!-- 등번호 배정 -->
	<update id="updatePlayerNumber" parameterType="com.kosta.project.dto.PlayerNumberDTO">
		UPDATE matching_add_lists SET player_number = #{playerNumber} WHERE matching_add_list_seq = #{matchingAddListSeq};
	</update>
	
	<!-- 매칭 신청 결과 조회 -->
 	<select id="selectMatchingAddResult" resultType="com.kosta.project.dto.MatchingConditionDTO" parameterType="Integer">
 		SELECT matching_date as matchingDate, field_address as fieldAddress, field_name as fieldName,
 		matching_time as matchingTime
		FROM matching_add_lists ml, matchings m, fields f
		WHERE ml.matching_seq = m.matching_seq
		AND m.field_seq = f.field_seq
		AND matching_add_seq = #{matchingAddSeq};
 	</select>
 	
 	<!-- 빠른 신청 리스트 조회(가까운 일정 순) -->
 	<select id="selectFastMatchingList" resultType="com.kosta.project.dto.FastMatchingDTO" parameterType="String">
		SELECT m.matching_seq as matchingSeq, matching_tier as matchingTier, matching_date as matchingDate, matching_time as matchingTime,
 		field_address as fieldAddress, field_address_detail as fieldAddressDetail, field_img as fieldImg, 
 		COUNT(matching_add_list_seq) as playerCount
		FROM matchings m, fields f, field_imgs fi, matching_add_lists ml
		WHERE m.field_seq = f.field_seq AND f.field_seq = fi.field_seq
		AND ml.matching_seq = m.matching_seq
		AND fast_add_status = 1
		AND cancel_status = 0
		AND matching_success_status = 1
		AND DATE_FORMAT(m.matching_date + INTERVAL m.matching_time HOUR, '%Y-%m-%d %H') 
	 	> DATE_FORMAT(NOW(), '%Y-%m-%d %H')
		AND m.matching_status = '매칭성공'
		AND m.matching_seq NOT IN (SELECT m.matching_seq AS matchingSeq
        								FROM matchings m
         					        INNER JOIN fields f ON m.field_seq = f.field_seq
               					  INNER JOIN matching_add_lists mal ON mal.matching_seq = m.matching_seq
            					     INNER JOIN matching_adds ma ON ma.matching_add_seq = mal.matching_add_seq
       								WHERE ma.user_id = #{userId}
       							   AND m.matching_status = '매칭성공'
         							AND m.fast_add_status = 1 GROUP BY m.matching_seq)
      AND m.matching_seq NOT IN (SELECT matching_seq
										FROM matching_add_lists 
										WHERE cancel_status = 0
										AND matching_success_status = 1
										GROUP BY matching_seq
										HAVING COUNT(matching_add_list_seq) >= 10)
		AND fi.field_img_seq = (SELECT min(field_img_seq) FROM field_imgs WHERE field_seq = f.field_seq)
		GROUP BY m.matching_seq, matching_tier, matching_date, matching_time, field_address, field_address_detail, field_img
		HAVING 10 > COUNT(matching_add_list_seq)
		ORDER BY matching_time, matching_date;
 	</select>
 	
 	<!-- 빠른 신청 리스트 조회(인원 적은 순, 가까운 일정 순) -->
	<select id="selectFastMatchingListBySmall" resultType="com.kosta.project.dto.FastMatchingDTO" parameterType="String">
		SELECT m.matching_seq as matchingSeq, matching_tier as matchingTier, matching_date as matchingDate, matching_time as matchingTime,
 		field_address as fieldAddress, field_address_detail as fieldAddressDetail, field_img as fieldImg, 
 		COUNT(matching_add_list_seq) as playerCount
		FROM matchings m, fields f, field_imgs fi, matching_add_lists ml
		WHERE m.field_seq = f.field_seq AND f.field_seq = fi.field_seq
		AND ml.matching_seq = m.matching_seq
		AND fast_add_status = 1
		AND cancel_status = 0
		AND matching_success_status = 1
		AND DATE_FORMAT(m.matching_date + INTERVAL m.matching_time HOUR, '%Y-%m-%d %H') 
	 	> DATE_FORMAT(NOW(), '%Y-%m-%d %H')
		AND m.matching_status = '매칭성공'
		AND m.matching_seq NOT IN (SELECT m.matching_seq AS matchingSeq
        								FROM matchings m
         					        INNER JOIN fields f ON m.field_seq = f.field_seq
               					  INNER JOIN matching_add_lists mal ON mal.matching_seq = m.matching_seq
            					     INNER JOIN matching_adds ma ON ma.matching_add_seq = mal.matching_add_seq
       								WHERE ma.user_id = #{userId}
       							   AND m.matching_status = '매칭성공'
         							AND m.fast_add_status = 1 GROUP BY m.matching_seq)
      AND m.matching_seq NOT IN (SELECT matching_seq
										FROM matching_add_lists 
										WHERE cancel_status = 0
										AND matching_success_status = 1
										GROUP BY matching_seq
										HAVING COUNT(matching_add_list_seq) >= 10)
		AND fi.field_img_seq = (SELECT min(field_img_seq) FROM field_imgs WHERE field_seq = f.field_seq)
		GROUP BY m.matching_seq, matching_tier, matching_date, matching_time, field_address, field_address_detail, field_img
		HAVING 10 > COUNT(matching_add_list_seq)
		ORDER BY COUNT(matching_add_list_seq), matching_time, matching_date;
	</select>
	
	<!-- 빠른 신청 리스트 조회(인원 많은 순, 가까운 일정 순) -->
	<select id="selectFastMatchingListByBig" resultType="com.kosta.project.dto.FastMatchingDTO" parameterType="String">
		SELECT m.matching_seq as matchingSeq, matching_tier as matchingTier, matching_date as matchingDate, matching_time as matchingTime,
 		field_address as fieldAddress, field_address_detail as fieldAddressDetail, field_img as fieldImg, 
 		COUNT(matching_add_list_seq) as playerCount
		FROM matchings m, fields f, field_imgs fi, matching_add_lists ml
		WHERE m.field_seq = f.field_seq AND f.field_seq = fi.field_seq
		AND ml.matching_seq = m.matching_seq
		AND fast_add_status = 1
		AND cancel_status = 0
		AND matching_success_status = 1
		AND DATE_FORMAT(m.matching_date + INTERVAL m.matching_time HOUR, '%Y-%m-%d %H') 
	 	> DATE_FORMAT(NOW(), '%Y-%m-%d %H')
		AND m.matching_status = '매칭성공'
		AND m.matching_seq NOT IN (SELECT m.matching_seq AS matchingSeq
        								FROM matchings m
         					        INNER JOIN fields f ON m.field_seq = f.field_seq
               					  INNER JOIN matching_add_lists mal ON mal.matching_seq = m.matching_seq
            					     INNER JOIN matching_adds ma ON ma.matching_add_seq = mal.matching_add_seq
       								WHERE ma.user_id = #{userId}
       							   AND m.matching_status = '매칭성공'
         							AND m.fast_add_status = 1 GROUP BY m.matching_seq)
      AND m.matching_seq NOT IN (SELECT matching_seq
										FROM matching_add_lists 
										WHERE cancel_status = 0
										AND matching_success_status = 1
										GROUP BY matching_seq
										HAVING COUNT(matching_add_list_seq) >= 10)
		AND fi.field_img_seq = (SELECT min(field_img_seq) FROM field_imgs WHERE field_seq = f.field_seq)
		GROUP BY m.matching_seq, matching_tier, matching_date, matching_time, field_address, field_address_detail, field_img
		HAVING 10 > COUNT(matching_add_list_seq)
		ORDER BY COUNT(matching_add_list_seq) DESC, matching_time, matching_date;
	</select>
	
	<!-- 빠른 신청 리스트 조회(인원 적은 순, 가까운 일정 순, 날짜 지역 등급 필터) -->
 	<select id="selectFastMatchingListBySmallAndDateAndRegionAndTier" resultType="com.kosta.project.dto.FastMatchingDTO" parameterType="com.kosta.project.dto.FastMatchingConditionDTO">
 		SELECT m.matching_seq as matchingSeq, matching_tier as matchingTier, matching_date as matchingDate, matching_time as matchingTime,
 		field_address as fieldAddress, field_address_detail as fieldAddressDetail, field_img as fieldImg, 
 		COUNT(matching_add_list_seq) as playerCount
		FROM matchings m, fields f, field_imgs fi, matching_add_lists ml
		WHERE m.field_seq = f.field_seq AND f.field_seq = fi.field_seq
		AND ml.matching_seq = m.matching_seq
		AND fast_add_status = 1
		AND cancel_status = 0
		AND matching_success_status = 1
		AND DATE_FORMAT(m.matching_date + INTERVAL m.matching_time HOUR, '%Y-%m-%d %H') 
	 	> DATE_FORMAT(NOW(), '%Y-%m-%d %H')
		AND m.matching_status = '매칭성공'
		AND m.matching_seq NOT IN (SELECT m.matching_seq AS matchingSeq
        								FROM matchings m
         					        INNER JOIN fields f ON m.field_seq = f.field_seq
               					  INNER JOIN matching_add_lists mal ON mal.matching_seq = m.matching_seq
            					     INNER JOIN matching_adds ma ON ma.matching_add_seq = mal.matching_add_seq
       								WHERE ma.user_id = #{userId}
       							   AND m.matching_status = '매칭성공'
         							AND m.fast_add_status = 1 GROUP BY m.matching_seq)
      AND m.matching_seq NOT IN (SELECT matching_seq
										FROM matching_add_lists 
										WHERE cancel_status = 0
										AND matching_success_status = 1
										GROUP BY matching_seq
										HAVING COUNT(matching_add_list_seq) >= 10)
		AND matching_date = #{matchingDate}
		AND field_address REGEXP #{fieldAddress}
		AND matching_tier = #{matchingTier}
		AND fi.field_img_seq = (SELECT min(field_img_seq) FROM field_imgs WHERE field_seq = f.field_seq)
		GROUP BY m.matching_seq, matching_tier, matching_date, matching_time, field_address, field_address_detail, field_img
		HAVING 10 > COUNT(matching_add_list_seq)
		ORDER BY COUNT(matching_add_list_seq), matching_date;
	</select>
	<!--     AND field_address IN (
      <foreach item="address" collection="fieldAddresses">
        #{address}
        <if test="index != last">
          ,
        </if>
      </foreach>
    )
    AND matching_tier IN (
      <foreach item="tier" collection="matchingTiers">
        #{tier}
        <if test="index != last">
          ,
        </if>
      </foreach>
    ) -->


    <!-- 빠른 신청 리스트 조회(인원 많은 순, 가까운 일정 순, 날짜 지역 등급 필터) -->
    <select id="selectFastMatchingListByBigAndDateAndRegionAndTier" resultType="com.kosta.project.dto.FastMatchingDTO"
            parameterType="com.kosta.project.dto.FastMatchingConditionDTO">
        SELECT m.matching_seq               as matchingSeq,
               matching_tier                as matchingTier,
               matching_date                as matchingDate,
               matching_time                as matchingTime,
               field_address                as fieldAddress,
               field_address_detail         as fieldAddressDetail,
               field_img                    as fieldImg,
               COUNT(matching_add_list_seq) as playerCount
        FROM matchings m,
             fields f,
             field_imgs fi,
             matching_add_lists ml
        WHERE m.field_seq = f.field_seq
          AND f.field_seq = fi.field_seq
          AND ml.matching_seq = m.matching_seq
          AND fast_add_status = 1
		AND cancel_status = 0
		AND matching_success_status = 1
          AND DATE_FORMAT(m.matching_date + INTERVAL m.matching_time HOUR, '%Y-%m-%d %H') 
	 	> DATE_FORMAT(NOW(), '%Y-%m-%d %H')
          AND m.matching_status = '매칭성공'
		  AND m.matching_seq NOT IN (SELECT m.matching_seq AS matchingSeq
        								FROM matchings m
         					        INNER JOIN fields f ON m.field_seq = f.field_seq
               					  INNER JOIN matching_add_lists mal ON mal.matching_seq = m.matching_seq
            					     INNER JOIN matching_adds ma ON ma.matching_add_seq = mal.matching_add_seq
       								WHERE ma.user_id = #{userId}
       							   AND m.matching_status = '매칭성공'
         							AND m.fast_add_status = 1 GROUP BY m.matching_seq)
      AND m.matching_seq NOT IN (SELECT matching_seq
										FROM matching_add_lists 
										WHERE cancel_status = 0
										AND matching_success_status = 1
										GROUP BY matching_seq
										HAVING COUNT(matching_add_list_seq) >= 10)
          AND matching_date = #{matchingDate}
          AND field_address REGEXP #{fieldAddress}
          AND matching_tier = #{matchingTier}
          AND fi.field_img_seq = (SELECT min(field_img_seq) FROM field_imgs WHERE field_seq = f.field_seq)
        GROUP BY m.matching_seq, matching_tier, matching_date, matching_time, field_address, field_address_detail,
                 field_img
        HAVING 10 > COUNT(matching_add_list_seq)         
        ORDER BY COUNT(matching_add_list_seq) DESC, matching_date;
    </select>

    <!-- 등급확인(빠른 매칭 결제 할 때) -->
    <select id="selectMatchingTier" resultType="String" parameterType="Integer">
        SELECT matching_tier
        FROM matchings
        WHERE matching_seq = #{matchingSeq};
    </select>

    <!-- 일정표 -->
    <!-- 특정 달에 맞는 매칭 정보 리스트 불러오기 -->
    <select id="selectMatchingListByMonth" resultType="com.kosta.project.dto.MatchingScheduleListDTO">
        SELECT ma.matching_add_seq, m.matching_date, mal.matching_success_status, mal.cancel_status, m.matching_status
        FROM matching_adds ma
                 JOIN matching_add_lists mal ON ma.matching_add_seq = mal.matching_add_seq
                 JOIN matchings m ON mal.matching_seq = m.matching_seq
        WHERE MONTH(m.matching_date) = #{month}
          AND ma.user_id = #{userId}
		   OR ma.team_seq IN (SELECT t.team_seq
							  FROM teams t
									   JOIN team_members tm ON t.team_seq = tm.team_seq
							  WHERE tm.user_id = #{userId})
        ORDER BY m.matching_date desc
    </select>

    <!-- 해당 매칭에 대해 팀장 여부 확인하기 -->
    <select id="isTeamLeader" parameterType="com.kosta.project.dto.UserMatchingInfoDTO" resultType="boolean">
        SELECT COUNT(t.team_seq)
        FROM teams t
                 JOIN matching_adds ma ON t.team_seq = ma.team_seq
                 JOIN matching_add_lists mal ON ma.matching_add_seq = mal.matching_add_seq
                 JOIN matchings m ON m.matching_seq = mal.matching_seq
        WHERE t.leader_id = #{userId}
          AND m.matching_seq = #{matchingSeq}
          AND t.team_dismantle_status = 0;
    </select>

    <!-- 상대팀 전부 평가 완료 여부 확인하기 -->
    <select id="selectOpposingTeamReviewStatus" parameterType="com.kosta.project.dto.UserMatchingInfoDTO"
            resultType="boolean">
        SELECT min(review_status)
        FROM matchings m
                 JOIN matching_add_lists mal ON m.matching_seq = mal.matching_seq
                 JOIN matching_adds ma ON mal.matching_add_seq = ma.matching_add_seq
                 JOIN users u ON ma.user_id = u.user_id
        WHERE m.matching_seq = #{matchingSeq}
          AND mal.matching_success_status = 1
          AND mal.cancel_status = 0
          AND mal.team !=
              (SELECT mal.team
               FROM matching_add_lists mal
                        JOIN matching_adds ma
                             ON mal.matching_add_seq = ma.matching_add_seq
               WHERE ma.user_id = #{userId}
                 AND mal.matching_seq = #{matchingSeq})
    </select>

    <!-- getTeamNames 매칭 참여 팀 이름 불러오기 -->
    <select id="getTeamNames" parameterType="com.kosta.project.dto.UserMatchingInfoDTO" resultType="string">
        SELECT
            t.team_name
        FROM teams t
        WHERE t.team_seq IN (
            SELECT ma.team_seq
            FROM matching_adds ma
                     JOIN matching_add_lists mal ON mal.matching_add_seq = ma.matching_add_seq
            WHERE mal.matching_seq = #{matchingSeq} AND mal.team_status = 1
        )
        ORDER BY CASE WHEN t.team_seq = (SELECT team_seq FROM users WHERE user_id = #{userId}) THEN 1 ELSE 2 END
    </select>

    <!-- 특정 날짜에 맞는 매칭 리스트 불러오기 -->
    <select id="selectMatchingListByDate" resultType="com.kosta.project.dto.MatchingScheduleListDTO">
        SELECT m.matching_seq,
               m.matching_date,
               m.matching_time,
               m.fast_add_status,
               m.matching_status,
               m.a_score,
               m.b_score,
               ma.matching_add_seq,
               mal.matching_add_list_seq,
               mal.matching_success_status,
               mal.cancel_status,
               mal.pay_status,
               mal.review_status,
               mal.team_status,
               mal.team,
               mal.player_number,
               f.field_name
        FROM matching_adds ma
                 JOIN matching_add_lists mal ON ma.matching_add_seq = mal.matching_add_seq
                 JOIN matchings m ON mal.matching_seq = m.matching_seq
                 JOIN fields f on m.field_seq = f.field_seq
        WHERE m.matching_date = #{date}
            AND (ma.user_id = #{userId}
           OR ma.team_seq IN (SELECT t.team_seq
                              FROM teams t
                                       JOIN team_members tm ON t.team_seq = tm.team_seq
                              WHERE tm.user_id = #{userId}))
        ORDER BY m.matching_time ASC
    </select>

    <!-- 매칭 리스트 개수 불러오기 -->
    <select id="selectMatchingListCount" resultType="int">
        SELECT COUNT(mal.matching_seq)
        FROM matchings m
                 JOIN matching_add_lists mal ON m.matching_seq = mal.matching_seq
                 JOIN matching_adds ma ON mal.matching_add_seq = ma.matching_add_seq
        WHERE ma.user_id = #{userId}
    </select>

    <!-- 매칭 리스트 전부 불러오기 -->
    <select id="selectMatchingList" resultType="com.kosta.project.dto.MatchingScheduleListDTO">
        SELECT m.matching_seq,
               m.matching_date,
               m.matching_time,
               m.fast_add_status,
               m.matching_status,
               m.a_score,
               m.b_score,
               ma.matching_add_seq,
               mal.matching_add_list_seq,
               mal.matching_success_status,
               mal.cancel_status,
               mal.pay_status,
               mal.review_status,
               mal.team_status,
               mal.team,
               mal.player_number,
               f.field_name
        FROM matching_adds ma
                 JOIN matching_add_lists mal ON ma.matching_add_seq = mal.matching_add_seq
                 JOIN matchings m ON mal.matching_seq = m.matching_seq
                 JOIN fields f on m.field_seq = f.field_seq
        WHERE ma.user_id = #{userId}
           OR ma.team_seq IN (SELECT t.team_seq
                              FROM teams t
                                       JOIN team_members tm ON t.team_seq = tm.team_seq
                              WHERE tm.user_id = #{userId})
        ORDER BY m.matching_date DESC, m.matching_time DESC
    </select>

    <!-- 결제 상태 변경하기 -->
    <update id="updatePayStatus" parameterType="com.kosta.project.dto.UserMatchingInfoDTO">
        UPDATE matching_add_lists mal
            JOIN matching_adds ma ON mal.matching_add_seq = ma.matching_add_seq
        SET mal.pay_status = TRUE
        WHERE mal.matching_add_list_seq = #{matchingAddListSeq}
          AND ma.user_id = #{userId}
    </update>

    <!-- 매칭 신청 시퀀스 구하기 -->
    <select id="selectMatchingAddSeqByMatchingAddListSeq" parameterType="int" resultType="int">
        SELECT matching_add_seq
        from matching_add_lists
        where matching_add_list_seq = #{matchingAddListSeq};
    </select>

    <!-- 동일한 매칭 신청 시퀀스를 가진 매칭 신청목록 개수 구하기 -->
    <select id="selectMatchingAddListSeqCount" parameterType="int" resultType="int">
        select count(matching_add_list_seq)
        from matching_add_lists
        where matching_add_seq = #{matchingAddSeq};
    </select>

    <!-- 매칭 삭제하기 -->
    <delete id="deleteMatchingAdd">
        DELETE
        FROM matching_adds
        WHERE matching_add_seq = #{matchingAddSeq}
    </delete>

    <!-- 매칭 삭제하기 -->
    <delete id="deleteMatching">
        DELETE
        FROM matching_add_lists
        WHERE matching_add_list_seq = #{matchingAddListSeq}
    </delete>

    <!-- 매칭 시퀀스 구하기 -->
    <select id="selectMatchingSeqByMachingAddListSeq" parameterType="int" resultType="int">
        SELECT matching_seq
        FROM matching_add_lists
        WHERE matching_add_list_seq = #{matchingAddListSeq}
    </select>

    <!-- 매칭(개인) - 취소 상태 등록하기 -->
    <update id="updateCancelStatus" parameterType="int">
        UPDATE matching_add_lists
        SET cancel_status = 1
        WHERE matching_add_list_seq = #{matchingAddListSeq}
    </update>

    <!-- 매칭 - 빠른 매칭 상태 변경하기 -->
    <update id="updateFastAddStatus" parameterType="int">
        UPDATE matchings
        SET fast_add_status = 1
        WHERE matching_seq = #{matchingtSeq}
    </update>

    <!-- 상대팀 평가 -->
    <!-- 상대팀 리스트 불러오기 -->
    <select id="selectOpposingTeamPlayerList" parameterType="com.kosta.project.dto.UserMatchingInfoDTO"
            resultType="com.kosta.project.dto.UserPlayInfoDTO">
        SELECT u.user_id, u.nickname, mal.team, mal.player_number
        FROM matchings m
                 JOIN matching_add_lists mal ON m.matching_seq = mal.matching_seq
                 JOIN matching_adds ma ON mal.matching_add_seq = ma.matching_add_seq
                 JOIN users u ON ma.user_id = u.user_id
        WHERE m.matching_seq = #{matchingSeq}
          AND matching_success_status = 1
          AND mal.team !=
              (SELECT mal.team
               FROM matching_add_lists mal
                        JOIN matching_adds ma
                             ON mal.matching_add_seq = ma.matching_add_seq
               WHERE ma.user_id = #{userId}
                 AND mal.matching_seq = #{matchingSeq})
        ORDER BY player_number asc;
    </select>

    <!-- 각 사용자 별 등수에 맞는 점수 추가하기 (matching_add_lists 테이블) -->
    <update id="updateReviewScore" parameterType="com.kosta.project.dto.UserMatchingInfoDTO">
        update matching_add_lists mal
            JOIN matching_adds ma ON mal.matching_add_seq = ma.matching_add_seq
        set mal.review_score = mal.review_score + #{score}
        WHERE mal.matching_seq = #{matchingSeq}
          AND ma.user_id = #{userId}
    </update>

    <!-- 각 사용자 별 등수에 맞는 점수 추가하기 (users 테이블) -->
    <update id="updateUserScore" parameterType="com.kosta.project.dto.UserMatchingInfoDTO">
        update users u
            join mydb.matching_adds ma on u.user_id = ma.user_id
            join mydb.matching_add_lists mal on ma.matching_add_seq = mal.matching_add_seq
        set user_score = user_score + #{score}
        where mal.matching_seq = #{matchingSeq}
          and u.user_id = #{userId}
    </update>

    <!-- 매칭(개인) - 리뷰 작성 상태 등록하기 -->
    <update id="updateReviewStatus" parameterType="int">
        UPDATE matching_add_lists mal
            JOIN matching_adds ma ON mal.matching_add_seq = ma.matching_add_seq
        SET mal.review_status = 1
        WHERE mal.matching_add_list_seq = #{matchingAddListSeq}
    </update>

    <!-- 내 팀 리스트 불러오기 -->
    <select id="myTeamPlayerList" resultType="com.kosta.project.dto.UserPlayInfoDTO">
        SELECT u.user_id, u.nickname, mal.team, mal.player_number
        FROM matchings m
                 JOIN matching_add_lists mal ON m.matching_seq = mal.matching_seq
                 JOIN matching_adds ma ON mal.matching_add_seq = ma.matching_add_seq
                 JOIN users u ON ma.user_id = u.user_id
        WHERE m.matching_seq = #{matchingSeq}
          AND matching_success_status = 1
          AND mal.team =
              (SELECT mal.team
               FROM matching_add_lists mal
                        JOIN matching_adds ma
                             ON mal.matching_add_seq = ma.matching_add_seq
               WHERE ma.user_id = #{userId}
                 AND mal.matching_seq = #{matchingSeq})
          AND u.user_id != #{userId}
		order by  mal.player_number asc ;
    </select>

    <!-- 경기 결과 점수 불러오기 -->
    <select id="selectReviewScore" resultType="int" parameterType="com.kosta.project.dto.UserMatchingInfoDTO">
        SELECT mal.review_score
        FROM matching_add_lists mal
                 JOIN matching_adds ma ON mal.matching_add_seq = ma.matching_add_seq
        WHERE mal.matching_seq = #{matchingSeq}
          AND ma.user_id = #{userId}
    </select>

    <!-- 승리 여부 불러오기 -->
    <select id="selectTeamScore" resultType="int" parameterType="com.kosta.project.dto.UserMatchingInfoDTO">
        SELECT CASE
                   WHEN mal.team = 'A' AND m.a_score &gt; m.b_score THEN 1
                   WHEN mal.team = 'B' AND m.a_score &lt; m.b_score THEN 1
                   ELSE 0
                   END AS result
        FROM matchings m
                 JOIN matching_add_lists mal ON m.matching_seq = mal.matching_seq
                 JOIN matching_adds ma ON mal.matching_add_seq = ma.matching_add_seq
        WHERE ma.user_id = #{userId}
          AND m.matching_seq = #{matchingSeq}
    </select>
	
	<!-- 다가오는 경기 일정 -->
    <select id="selectMatchingAlready" parameterType="java.lang.String" resultType="com.kosta.project.dto.MatchingDTO">
		SELECT m.matching_status      as matchingStatus,
               m.matching_date        as matchingDate,
               m.matching_time        as matchingTime,
               f.field_address        as fieldAddress,
               f.field_address_detail as fieldAddressDetail,
               f.field_name           as fieldName
        FROM matchings m
                 INNER JOIN fields f ON m.field_seq = f.field_seq
                 INNER JOIN matching_add_lists mal ON mal.matching_seq = m.matching_seq
                 INNER JOIN matching_adds ma ON ma.matching_add_seq = mal.matching_add_seq
        WHERE ma.user_id = #{userId}
          AND (m.matching_status = '경기확정' OR m.matching_status = '매칭성공')
          AND DATE_FORMAT(m.matching_date + INTERVAL m.matching_time + 2 HOUR, '%Y-%m-%d %H') 
	 	    > DATE_FORMAT(NOW(), '%Y-%m-%d %H')
          AND m.fast_add_status = 0
          AND m.matching_seq NOT IN (SELECT m.matching_seq AS matchingSeq
        								FROM matchings m
         					        INNER JOIN fields f ON m.field_seq = f.field_seq
               					  INNER JOIN matching_add_lists mal ON mal.matching_seq = m.matching_seq
            					     INNER JOIN matching_adds ma ON ma.matching_add_seq = mal.matching_add_seq
       								WHERE ma.user_id = #{userId}
       							   AND (m.matching_status = '경기확정' OR m.matching_status = '매칭성공')
       							   AND mal.matching_success_status = 0
         							GROUP BY m.matching_seq)
        ORDER BY m.matching_date DESC,
                 m.matching_time DESC
        LIMIT 1
    </select>
    
    
    

    <!-- 빠른 매칭 결제하기 -->
	<insert id="insertMatchingAddForFastMatching" parameterType="java.lang.String">
		INSERT INTO matching_adds(matching_add_date, user_id, team_seq)
		VALUES(NOW(), #{userId}, NULL);
	</insert>
	
	<select id="selectFastMatchingCountForPay" parameterType="int" resultType="int">
		SELECT count(matching_add_list_seq) FROM matching_add_lists WHERE matching_seq = #{matchingSeq}
		AND matching_success_status = 1
		AND cancel_status = 0
	</select>
	
<!-- 빠른 매칭 결제하기 -->
<insert id="insertFastMatchingAndPay" parameterType="com.kosta.project.dto.UserMatchingInfoDTO">
INSERT INTO matching_add_lists(matching_seq, matching_success_status, cancel_status, pay_status, review_status,
team_status, team, player_number, review_score, matching_add_seq)
VALUES (#{matchingSeq}, 1, 0, 1, 0, 0, '0', 0, 0,
(SELECT matching_add_seq FROM matching_adds WHERE user_id = #{userId}
ORDER BY matching_add_seq DESC
LIMIT 1));
</insert>    


<update id="updateFastMatchingStatusByFastMatchingSeq" parameterType="int">
	UPDATE matchings
	SET fast_add_status = 0
	WHERE matching_seq = #{matchingSeq};
</update>

<!-- 예정된 매칭 시퀀스 리스트 확인 -->
<select id="selectFutureMatchingList" parameterType="java.lang.String" resultType="com.kosta.project.dto.UserMatchingInfoDTO">
  SELECT m.matching_seq, m.matching_date, m.matching_time, m.fast_add_status, m.matching_status,
                m.a_score, m.b_score, ma.matching_add_seq,
                mal.matching_add_list_seq, mal.matching_success_status, mal.cancel_status, mal.pay_status,
                mal.review_status, mal.team_status, mal.team, mal.player_number
FROM matching_adds ma
JOIN matching_add_lists mal ON ma.matching_add_seq = mal.matching_add_seq
JOIN matchings m ON mal.matching_seq = m.matching_seq
WHERE ma.user_id = 'user001' AND m.matching_date-NOW()>=0
ORDER BY m.matching_date, m.matching_time desc
</select>

</mapper>